---

- name: Create VPC
  local_action:
    module: ec2_vpc
    region: "{{ vpc_region }}"
    cidr_block: "{{ vpc_ip_root }}.0.0/16"
    resource_tags: { "Name":"{{ vpc_name }}" }
  register: vpc

- name: Create Internet gateway for VPC.
  ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc_id }}"
    region: "{{ vpc_region }}"
    state: present
  register: igw

- name: "Create subnet for {{ vpc_az0 }}"
  ec2_vpc_subnet:
    state: present
    az: "{{ vpc_az0 }}"
    region: "{{ vpc_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    cidr: "{{ vpc_ip_root }}.{{ az0_subnet_range}}/24"
    resource_tags:
      Name: "{{ vpc_name }}"
  register: az0_subnet

- name: "Create subnet for {{ vpc_az1 }}"
  ec2_vpc_subnet:
    state: present
    az: "{{ vpc_az1 }}"
    region: "{{ vpc_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    cidr: "{{ vpc_ip_root }}.{{ az1_subnet_range}}/24"
    resource_tags:
      Name: "{{ vpc_name }}"
  register: az1_subnet

- name: Setup route tables
  ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc_id }}"
    region: "{{ vpc_region }}"
    subnets:
      - "{{ az0_subnet.subnet.cidr_block }}"
      - "{{ az1_subnet.subnet.cidr_block }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table

- name: Create a empty security group
  local_action:
    module: ec2_group
    region: "{{ vpc_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    name: "{{ vpc_sg_name }}"
    description: "{{ vpc_sg_name }}"
    rules:
      - proto: tcp
        from_port: 8200
        to_port: 8200
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
  register: sanctuary_sg
